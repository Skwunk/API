/*
 * TestAPI
 *
 * Testing viability of OpenAPI2.0 for new URY API
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package main

import (
	"net/http"
	"strings"
	"github.com/gorilla/mux"
	ep "github.com/Skwunk/PrototypeAPI/endpoints"
	ut "github.com/Skwunk/PrototypeAPI/utils"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = ut.Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/PrototypeAPI",
		ep.Index,
	},

	Route{
		"AddQuote",
		strings.ToUpper("Post"),
		"/PrototypeAPI/quotes",
		ep.AddQuote,
	},

	Route{
		"GetAllQuotes",
		strings.ToUpper("Get"),
		"/PrototypeAPI/quotes",
		ep.GetAllQuotes,
	},

	Route{
		"GetQuote",
		strings.ToUpper("Get"),
		"/PrototypeAPI/quotes/{quote_id}",
		ep.GetQuote,
	},

	Route{
		"UpdateQuote",
		strings.ToUpper("Put"),
		"/PrototypeAPI/quotes/{quote_id}",
		ep.UpdateQuote,
	},

	Route{
		"UpdateQuoteDate",
		strings.ToUpper("Put"),
		"/PrototypeAPI/quotes/{quote_id}/date",
		ep.UpdateQuoteDate,
	},

	Route{
		"UpdateQuoteSource",
		strings.ToUpper("Put"),
		"/PrototypeAPI/quotes/{quote_id}/source",
		ep.UpdateQuoteSource,
	},

	Route{
		"UpdateQuoteSuspended",
		strings.ToUpper("Put"),
		"/PrototypeAPI/quotes/{quote_id}/suspended",
		ep.UpdateQuoteSuspended,
	},

	Route{
		"UpdateQuoteText",
		strings.ToUpper("Put"),
		"/PrototypeAPI/quotes/{quote_id}/text",
		ep.UpdateQuoteText,
	},
}
